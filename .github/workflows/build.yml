# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build APK

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
      - name: Determine version
        id: get_version
        run: |
          echo VERSION_NAME=${GITHUB_REF/refs\/tags\//} >> $GITHUB_OUTPUT
          echo VERSION_CODE=${{ github.run_number }} >> $GITHUB_OUTPUT
      - name: Export android secrets
        run: |
          echo $KEY | base64 -i -d > android/key.jks
          echo storePassword=$STORE_PASSWORD > android/key.properties
          echo keyPassword=$KEY_PASSWORD >> android/key.properties
          echo keyAlias=$KEY_ALIAS >> android/key.properties
          echo storeFile=../key.jks >> android/key.properties
        env:
          KEY: ${{ secrets.KEY }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      - name: Get dependencies
        run: flutter pub get
      - name: Build APK
        run: |
          flutter build apk --release --build-name ${{ steps.get_version.outputs.VERSION_NAME }} --build-number ${{ steps.get_version.outputs.VERSION_CODE }}
          flutter build appbundle --release --build-name ${{ steps.get_version.outputs.VERSION_NAME }} --build-number ${{ steps.get_version.outputs.VERSION_CODE }}
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.apk
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.aab
      - name: Build MSIX
        run: |
          echo $WINDOWS_KEY | base64 -i -d > windows/key.pfx
          dart run msix:create --certificate-password "$WINDOWS_PASSWORD" --certificate-path "windows/key.pfx" --version ${{ steps.get_version.outputs.VERSION_NAME }}.0
          mv build/windows/x64/runner/Release/whatnext.msix build/windows/x64/runner/Release/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.msix
        env:
          WINDOWS_KEY: ${{ secrets.WINDOWS_KEY }}
          WINDOWS_PASSWORD: ${{ secrets.WINDOWS_PASSWORD }}
      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.apk
            build/app/outputs/bundle/release/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.aab
            build/windows/x64/runner/Release/whatnext-${{ steps.get_version.outputs.VERSION_NAME }}.msix
